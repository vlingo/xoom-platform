name: Build

on:
  workflow_call:
    inputs:
      maven-build-cmd:
        description: 'Maven command to build the project'
        default: 'mvn --batch-mode --update-snapshots -Pgithub-releases install'
        required: false
        type: string
      maven-deploy-github-cmd:
        description: 'Maven command to deploy the project to github'
        default: 'mvn --batch-mode -DskipTests -DuseGitHubPackages -DsignArtifacts -Pgithub-releases deploy'
        required: false
        type: string
      maven-deploy-central-cmd:
        description: 'Maven command to build the project to maven central'
        default: 'mvn --batch-mode -DskipTests -DuseSonatype -DsignArtifacts -Pgithub-releases deploy'
        required: false
        type: string

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      xoom_version: ${{ steps.version.outputs.xoom_version }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'
          cache: 'maven'

      - name: Determine version
        id: version
        run: echo "xoom_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Build with Maven
        run: ${{ inputs.maven-build-cmd }}

      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: JARs
          path: target/*.jar

      - name: Notify discord
        if: always() && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) && github.repository_owner == 'vlingo'
        uses: 'Ilshidur/action-discord@0.3.2'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: Bob the Builder
          DISCORD_EMBEDS: '[{"title":"Build ${{ job.status }}", "description":"[${{ github.repository }}:${{ steps.version.outputs.xoom_version }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})","author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "${{ github.server_url }}/${{ github.actor }}"},"color":"${{ job.status == ''success'' && ''65280'' || ''16711680'' }}"}]'

  deploy-github:
    name: Deploy to GitHub
    runs-on: ubuntu-latest
    needs: build
    if: (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && github.repository_owner == 'vlingo'
    steps:

      - uses: actions/checkout@v3

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'
          cache: 'maven'
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Deploy
        run: ${{ inputs.maven-deploy-github-cmd }}
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_GITHUB_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Notify discord
        if: failure()
        uses: 'Ilshidur/action-discord@0.3.2'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: Suzi the Publisher
          DISCORD_EMBEDS: '[{"title":"GitHub Deployment ${{ job.status }}", "description":":rocket: [${{ github.repository }}:${{ needs.build.outputs.xoom_version }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})","author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "${{ github.server_url }}/${{ github.actor }}"},"color":"${{ job.status == ''success'' && ''65280'' || ''16711680'' }}"}]'

  deploy-central:
    name: Deploy to Maven Central
    runs-on: ubuntu-latest
    needs: build
    if: (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master') && github.repository_owner == 'vlingo'
    steps:

      - uses: actions/checkout@v3

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'
          cache: 'maven'
          server-id: central-repository-ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Configure an additional Maven repository
        run: sed -i'.bkp' -e 's/\(<\/servers>\)/  <server><id>github<\/id><username>\${env.GITHUB_ACTOR}<\/username><password>\${env.GITHUB_TOKEN}<\/password><\/server>\n\1/g' ~/.m2/settings.xml

      - name: Deploy
        run: ${{ inputs.maven-deploy-central-cmd }}
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Trigger downstream builds
        if: startsWith(github.ref, 'refs/tags/') && hashFiles('.github/trigger_deps.sh') != ''
        run: .github/trigger_deps.sh
        env:
          RELEASE_GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

      - name: Notify discord
        if: startsWith(github.ref, 'refs/tags/') || failure()
        uses: 'Ilshidur/action-discord@0.3.2'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: Suzi the Publisher
          DISCORD_EMBEDS: '[{"title":"Sonatype Deployment ${{ job.status }}", "description":":rocket: [${{ github.repository }}:${{ needs.build.outputs.xoom_version }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})","author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "${{ github.server_url }}/${{ github.actor }}"},"color":"${{ job.status == ''success'' && ''65280'' || ''16711680'' }}"}]'
